<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Git相关命令]]></title>
    <url>%2F2018%2F10%2F02%2FGitOrder%2F</url>
    <content type="text"><![CDATA[git config –list 查看配置 git config user.name 修改用户信息 git remote set-url 修改远程仓库地址 git add 向仓库中添加文件 git commit -m 向仓库中提交文件 git status 查看当前仓库状态 git diff 查看文件前后修改内容 git log 从近到远的提交日志 git reflog 查看命令日志 git reset –hard HEAD^ 回退到上一个版本 git reset –hard HEAD~1 回退到上一个版本 git checkout – 撤销修改 git checkout -b dev 创建dev分支并切换到dev分支 git branch dev 创建dev分支 git checkout dev 切换到dev分支 git branch 查看当前分支 git merge dev 合并dev分支的内容到当前分支上 git branch -d dev 删除分支dev git rm 删除版本库中的文件 git remote add origin git@GitHub.com:SongZhikuan/SongZhikuan.GitHub.io.git 远程仓库连接 git push origin master 推送到远程仓库 git clone git@github.com:SongZhikuan/SongZhikuan.github.io.git 克隆远程仓库到本地 git remote -v 查看远程仓库信息 git checkout -b branch-name origin/branch-name 本地创建和远程分支对应的分支 git branch –set-upstream branch-name origin/branch-name 建立本地分支和远程分支的关联 git pull 从远程抓取分支]]></content>
      <categories>
        <category>Git</category>
      </categories>
      <tags>
        <tag>GitHub</tag>
        <tag>Git</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[js数组]]></title>
    <url>%2F2018%2F10%2F01%2FjsArray%2F</url>
    <content type="text"><![CDATA[数组本身是对象数组是一段线性分配的内存，通过整数去计算偏移量去访问其中元素。数组可以是很快的数据结构，不幸的是javascript并没有这种像数组一样的数据结构，而是提供了一种类数组特性的特殊对象，它把数组下标转成字符串，用作其属性。属性的检索和更新可以像对象一样一样的，除了有一个可以用整数作为属性名的特性外。 数组可以包含任意混合类型的值在大多数语言中，一个数组要求其所有元素都是相同的类型，而javascript则不然，它允许数组包含任意混合类型的值。 1let misc=['s',10,&#123;name:'demo'&#125;,undefined]; 数组长度不是定值每个数组都有一个length属性，和大多数其它语言不同，javaScript数组的length是没有上限的，使用大于和等于当前length的数字来做下标来保存一个元素，那么length将增大来容纳新的元素，不会发生边界错误。length属性的值是这个数组最大整数属性名上加上1，它不一定等于数组的属性的个数。12let arr = [];//arr.length = 0arr[10000]=true;//arr.length = 10001,arr仅包含一个元素 可以设置length的值，设置更大的值无须给数组分配更多的内存，设置小会删除大于等于length的属性。123let arr = ['aaa','sss','ddd','fff','ggg']; //arr = ['aaa','sss','ddd','fff','ggg']arr.length=3; //arr = ['aaa','sss','ddd']arr[3] = 'qqq'; //arr = ['aaa','sss','ddd','qqq'] 温馨提示：arr[arr.length]=’bbb’与arr.push(‘bbb)结果一样 删除元素delete运算符可以删除数组中的元素，由于数组也是对象。删除的结果是数组中遗留一个空洞，这是因为被删除元素之后的的元素保留了他们最初的下标。javaScript提供了splice方法，删除一些元素并将它们替换为其它元素。splice（param1,param2,…）,第一个参数为序号，第二个参数为要删除的个数，其它的参数会在序号那个点被插入到数组。splice的执行过程是：删除指定元素 -&gt; 移除之后的所有元素并以新的键值重新插入，在大型数组操作中属性删除效率不高。 枚举元素可以像对象一样的用for in来遍历数组的所有属性，没法保证属性的顺序以及可能来自原型链上的属性。使用常规for语句可以规避此类问题。]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>JavaScript</tag>
        <tag>数组</tag>
      </tags>
  </entry>
</search>
